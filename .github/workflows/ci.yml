name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Lint with ruff
        run: ruff check src/ tests/

      - name: Format with black
        run: black --check src/ tests/

      - name: Type check with mypy
        run: mypy src/

      - name: Security check with Bandit
        run: bandit -r src/ -c .bandit -q

      - name: Dependency audit with pip-audit
        run: |
          pip-audit --desc --format=json > audit-results.json
          # Fail if CRITICAL vulnerabilities found
          if grep -q '"severity": "CRITICAL"' audit-results.json; then
            echo "❌ CRITICAL vulnerabilities found!"
            pip-audit --desc
            exit 1
          fi
          echo "✅ No CRITICAL vulnerabilities found"

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: Run tests
        run: pytest --cov=src/bbia_sim --cov-report=xml --cov-report=term-missing

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  examples:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Test examples
        run: |
          echo "Testing hello_sim.py..."
          python examples/hello_sim.py --duration 1

          echo "Testing goto_pose.py (expect 401 error)..."
          python examples/goto_pose.py --token dev --joint neck_yaw --pos 0.6 || true

          echo "Testing subscribe_telemetry.py (expect connection error)..."
          timeout 5 python examples/subscribe_telemetry.py --token dev --count 3 || true

          echo "✅ All examples executed successfully"

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      - name: Build package
        run: python -m build

      - name: Check package
        run: pip install dist/*.whl
